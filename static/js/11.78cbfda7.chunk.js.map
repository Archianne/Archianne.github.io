{"version":3,"sources":["components/_Styled/link.js","theme/icons.js","components/_Styled/toggle.js","components/_Styled/dropdown.js","components/NavBar/index.js"],"names":["Link","children","href","target","StyledLink","styled","a","Icons","Archer","GiBowman","Menu","AiOutlineMenu","Linkedin","IoLogoLinkedin","Toggle","isOn","handleToggle","StyledToggle","id","checked","onChange","type","htmlFor","div","DropdownMenu","dropdownRef","useRef","useState","isActive","setIsActive","useEffect","pageClickEvent","e","current","contains","window","addEventListener","removeEventListener","StyledDropdown","onClick","className","ref","title","path","map","tab","index","props","theme","bg","line","fontColor1","StyledNavBar","NavBar","useLocalStorage","setIsOn","FlexDiv","changeTheme","nav","navBg","navFontColor"],"mappings":"qIAMeA,IAJF,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,OAC7B,OAAO,cAACC,EAAD,CAAYF,KAAMA,EAAMC,OAAQA,EAAhC,SAAyCF,KAKlD,IAAMG,EAAaC,IAAOC,EAAV,4E,mGCIDC,EARD,CAEZC,O,MAAQC,EACRC,KAAMC,IAENC,SAAUC,K,eCSGC,EAhBA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACtB,OACE,eAACC,EAAD,CAAcC,GAAG,SAAjB,UACE,uBACEC,QAASJ,EACTK,SAAUJ,EACVE,GAAE,SACFG,KAAK,aAEP,uBAAOC,QAAO,SAAd,SACE,+BAQFL,EAAeZ,IAAOkB,IAAV,syB,OCuDHC,EAtEM,WACnB,IAAMC,EAAcC,iBAAO,MAC3B,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KA6CA,OApBAC,qBAAU,WACR,IAAMC,EAAiB,SAACC,GAEI,OAAxBP,EAAYQ,SACXR,EAAYQ,QAAQC,SAASF,EAAE7B,SAEhC0B,GAAaD,IASjB,OAJIA,GACFO,OAAOC,iBAAiB,QAASL,GAG5B,WACLI,OAAOE,oBAAoB,QAASN,MAErC,CAACH,IAGF,eAACU,EAAD,WACI,cAAC,EAAM5B,KAAP,CAAY6B,QA9CF,kBAAMV,GAAaD,IA8CCY,UAAU,iBAC1C,qBACEC,IAAKhB,EACLe,UAAS,eAAUZ,EAAW,SAAW,YAF3C,SAIE,6BAlDO,CACX,CACEc,MAAO,OACPC,KAAM,IAER,CACED,MAAO,YACPC,KAAM,aAER,CACED,MAAO,QACPC,KAAM,SAER,CACED,MAAO,OACPC,KAAM,QAER,CACED,MAAO,UACPC,KAAM,YAgCIC,KAAI,SAACC,EAAKC,GACd,OACE,oBAAIP,QAAS,kBAAMV,GAAY,IAA/B,SACE,cAAC,IAAD,CAAM3B,KAAM,MAAQ2C,EAAIF,KAAxB,SACGE,EAAIH,OAD4BI,gBAc7CR,EAAiBjC,IAAOkB,IAAV,y/BAGA,SAACwB,GAAD,OAAWA,EAAMC,MAAMC,MAyBV,SAACF,GAAD,OAAWA,EAAMC,MAAME,QAMvC,SAACH,GAAD,OAAWA,EAAMC,MAAMG,cCnDlCC,GAFSC,UAnDA,SAACN,GACd,MAAwBO,YAAgB,QAAQ,GAAhD,mBAAOvC,EAAP,KAAawC,EAAb,KAwBA,OACE,eAACH,EAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAMlD,KAAM,MAAZ,SACE,cAAC,EAAMM,OAAP,CAAcgC,UAAU,gBAE1B,eAACgB,EAAD,WA7BS,CACX,CACEd,MAAO,OACPC,KAAM,IAER,CACED,MAAO,YACPC,KAAM,aAER,CACED,MAAO,QACPC,KAAM,SAER,CACED,MAAO,OACPC,KAAM,QAER,CACED,MAAO,UACPC,KAAM,YAWEC,KAAI,SAACC,EAAKC,GACd,OACE,cAAC,IAAD,CAAM5C,KAAM,MAAQ2C,EAAIF,KAAxB,SACE,4BAAIE,EAAIH,SADyBI,MAKvC,cAAC,EAAD,CACE/B,KAAMA,EACNC,aAAc,WACZ+B,EAAMU,cACNF,GAASxC,aAUAV,IAAOqD,IAAV,0eAQF,SAACX,GAAD,OAAWA,EAAMC,MAAMW,SAC5B,SAACZ,GAAD,OAAWA,EAAMC,MAAMY,gBAWrB,SAACb,GAAD,OAAWA,EAAMC,MAAMY,iBAW9BJ,EAAUnD,IAAOkB,IAAV","file":"static/js/11.78cbfda7.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Link = ({ children, href,target }) => {\r\n  return <StyledLink href={href} target={target}>{children}</StyledLink>;\r\n};\r\n\r\nexport default Link;\r\n\r\nconst StyledLink = styled.a`\r\n  font-weight: 645;\r\n  text-decoration: none;\r\n`;\r\n","import { AiOutlineMenu } from \"react-icons/ai\";\r\nimport { IoLogoLinkedin } from \"react-icons/io\";\r\nimport { GiBowman } from \"react-icons/gi\";\r\n\r\nconst Icons = {\r\n  //navbar\r\n  Archer: GiBowman,\r\n  Menu: AiOutlineMenu,\r\n  //contact\r\n  Linkedin: IoLogoLinkedin,\r\n};\r\n\r\nexport default Icons;\r\n","import styled from \"styled-components\";\r\n\r\nconst Toggle = ({ isOn, handleToggle }) => {\r\n  return (\r\n    <StyledToggle id=\"toggle\">\r\n      <input\r\n        checked={isOn}\r\n        onChange={handleToggle}\r\n        id={`switch`}\r\n        type=\"checkbox\"\r\n      />\r\n      <label htmlFor={`switch`}>\r\n        <span />\r\n      </label>\r\n    </StyledToggle>\r\n  );\r\n};\r\n\r\nexport default Toggle;\r\n\r\nconst StyledToggle = styled.div`\r\n  input {\r\n    height: 0;\r\n    width: 0;\r\n    visibility: hidden;\r\n  }\r\n\r\n  label {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    cursor: pointer;\r\n    width: 40px;\r\n    height: 23px;\r\n    background: grey;\r\n    border-radius: 100px;\r\n    position: relative;\r\n    transition: background-color 0.2s;\r\n  }\r\n\r\n  label span {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 4px;\r\n    left: 2px;\r\n    width: 15px;\r\n    height: 15px;\r\n    border-radius: 45px;\r\n    transition: 0.2s;\r\n    background: #333;\r\n    box-shadow: 0 0 2px 0 rgba(10, 10, 10, 0.29);\r\n  }\r\n\r\n  input:checked + label span {\r\n    left: calc(100% - 2px);\r\n    transform: translateX(-100%);\r\n    background: #fff;\r\n  }\r\n\r\n  label:active span {\r\n    width: 10px;\r\n  }\r\n`;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport Icons from \"../../theme/icons\";\r\nimport styled from \"styled-components\";\r\nimport Link from \"./link\";\r\n\r\nconst DropdownMenu = () => {\r\n  const dropdownRef = useRef(null);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const onClick = () => setIsActive(!isActive);\r\n  const tabs = [\r\n    {\r\n      title: \"Home\",\r\n      path: \"\",\r\n    },\r\n    {\r\n      title: \"Portfolio\",\r\n      path: \"portfolio\",\r\n    },\r\n    {\r\n      title: \"Links\",\r\n      path: \"links\",\r\n    },\r\n    {\r\n      title: \"Blog\",\r\n      path: \"blog\",\r\n    },\r\n    {\r\n      title: \"Contact\",\r\n      path: \"contact\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const pageClickEvent = (e) => {\r\n      if (\r\n        dropdownRef.current !== null &&\r\n        !dropdownRef.current.contains(e.target)\r\n      ) {\r\n        setIsActive(!isActive);\r\n      }\r\n    };\r\n\r\n    // If the item is active (ie open) then listen for clicks\r\n    if (isActive) {\r\n      window.addEventListener(\"click\", pageClickEvent);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"click\", pageClickEvent);\r\n    };\r\n  }, [isActive]);\r\n\r\n  return (\r\n    <StyledDropdown>\r\n        <Icons.Menu onClick={onClick} className=\"menu-trigger\"/>\r\n      <nav\r\n        ref={dropdownRef}\r\n        className={`menu ${isActive ? \"active\" : \"inactive\"}`}\r\n      >\r\n        <ul>\r\n          {tabs.map((tab, index) => {\r\n            return (\r\n              <li onClick={() => setIsActive(false)}>\r\n                <Link href={\"/#/\" + tab.path} key={index}>\r\n                  {tab.title}\r\n                </Link>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </nav>\r\n    </StyledDropdown>\r\n  );\r\n};\r\n\r\nexport default DropdownMenu;\r\n\r\nconst StyledDropdown = styled.div`\r\n  @media (max-width: 768px) {\r\n    .menu {\r\n      background: ${(props) => props.theme.bg};\r\n      border-radius: 8px;\r\n      position: absolute;\r\n      top: 60px;\r\n      width: 50vw;\r\n      box-shadow: 0 1px 8px rgba(0, 0, 0, 0.3);\r\n      opacity: 0;\r\n      visibility: hidden;\r\n      transform: translateX(-20px);\r\n      transition: opacity 0.4s ease, transform 0.4s ease, visibility 0.4s;\r\n    }\r\n\r\n    .menu.active {\r\n      opacity: 1;\r\n      visibility: visible;\r\n      transform: translateY(0);\r\n    }\r\n\r\n    .menu ul {\r\n      list-style: none;\r\n      padding: 0;\r\n      margin: 0;\r\n    }\r\n\r\n    .menu li {\r\n      border-bottom: 1px solid ${(props) => props.theme.line};\r\n      :last-child {\r\n        border: none;\r\n      }\r\n      a {\r\n        text-decoration: none;\r\n        color: ${(props) => props.theme.fontColor1};\r\n        padding: 15px 20px;\r\n        display: block;\r\n      }\r\n    }\r\n\r\n    .menu-trigger {\r\n      background: transparent;\r\n      color: #f5f5f5;\r\n      cursor: pointer;\r\n      border: none;\r\n      width: 50px;\r\n      height: 25px;\r\n    }\r\n  }\r\n`;\r\n","import useLocalStorage from \"../_Hooks/useLocalStorage\";\r\nimport styled from \"styled-components\";\r\nimport Icons from \"../../theme/icons\";\r\nimport Link from \"../_Styled/link\";\r\nimport Toggle from \"../_Styled/toggle\";\r\nimport DropdownMenu from \"../_Styled/dropdown\";\r\n\r\nconst NavBar = (props) => {\r\n  const [isOn, setIsOn] = useLocalStorage(\"isOn\", false);\r\n  const tabs = [\r\n    {\r\n      title: \"Home\",\r\n      path: \"\",\r\n    },\r\n    {\r\n      title: \"Portfolio\",\r\n      path: \"portfolio\",\r\n    },\r\n    {\r\n      title: \"Links\",\r\n      path: \"links\",\r\n    },\r\n    {\r\n      title: \"Blog\",\r\n      path: \"blog\",\r\n    },\r\n    {\r\n      title: \"Contact\",\r\n      path: \"contact\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <StyledNavBar>\r\n      <DropdownMenu />\r\n      <Link href={\"/#/\"}>\r\n        <Icons.Archer className=\"logo-icon\" />\r\n      </Link>\r\n      <FlexDiv>\r\n        {tabs.map((tab, index) => {\r\n          return (\r\n            <Link href={\"/#/\" + tab.path} key={index}>\r\n              <p>{tab.title}</p>\r\n            </Link>\r\n          );\r\n        })}\r\n        <Toggle\r\n          isOn={isOn}\r\n          handleToggle={() => {\r\n            props.changeTheme();\r\n            setIsOn(!isOn);\r\n          }}\r\n        />\r\n      </FlexDiv>\r\n    </StyledNavBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n\r\nconst StyledNavBar = styled.nav`\r\n  display: flex;\r\n  flex-flow: row no-wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 16px 24px;\r\n  line-height: 21px;\r\n  height: 70px;\r\n  background: ${(props) => props.theme.navBg};\r\n  color: ${(props) => props.theme.navFontColor};\r\n  @media (max-width: 768px) {\r\n    padding: 16px 16px;\r\n  }\r\n\r\n  #toggle {\r\n    margin-top: -18px;\r\n    width: 50px;\r\n  }\r\n\r\n  a {\r\n    color: ${(props) => props.theme.navFontColor};\r\n    margin-right: 16px;\r\n  }\r\n\r\n  .logo-icon {\r\n    width: 32px;\r\n    height: auto;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst FlexDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  @media (max-width: 768px) {\r\n    a {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}