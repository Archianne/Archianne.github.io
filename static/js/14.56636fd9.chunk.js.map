{"version":3,"sources":["pages/home.js"],"names":["StyledHome","Home","TxtRotate","element","toRotate","period","this","loopNum","parseInt","txt","tick","isDeleting","prototype","i","length","fullTxt","substring","innerHTML","that","delta","Math","random","setTimeout","window","onload","elements","document","getElementsByClassName","getAttribute","JSON","parse","fallback","className","styled","div"],"mappings":"gKA6EMA,GAFSC,UAvEF,WACX,IAAMC,EAAY,SAAUC,EAASC,EAAUC,GAC7CC,KAAKF,SAAWA,EAChBE,KAAKH,QAAUA,EACfG,KAAKC,QAAU,EACfD,KAAKD,OAASG,SAASH,EAAQ,KAAO,IACtCC,KAAKG,IAAM,GACXH,KAAKI,OACLJ,KAAKK,YAAa,GA+CpB,OA5CAT,EAAUU,UAAUF,KAAO,WACzB,IAAMG,EAAIP,KAAKC,QAAUD,KAAKF,SAASU,OACjCC,EAAUT,KAAKF,SAASS,GAE1BP,KAAKK,WACPL,KAAKG,IAAMM,EAAQC,UAAU,EAAGV,KAAKG,IAAIK,OAAS,GAElDR,KAAKG,IAAMM,EAAQC,UAAU,EAAGV,KAAKG,IAAIK,OAAS,GAGpDR,KAAKH,QAAQc,UAAY,sBAAwBX,KAAKG,IAAM,UAE5D,IAAMS,EAAOZ,KACTa,EAAQ,IAAsB,IAAhBC,KAAKC,SAEnBf,KAAKK,aACPQ,GAAS,GAGNb,KAAKK,YAAcL,KAAKG,MAAQM,EAG1BT,KAAKK,YAA2B,KAAbL,KAAKG,MACjCH,KAAKK,YAAa,EAClBL,KAAKC,UACLY,EAAQ,MALRA,EAAQb,KAAKD,OACbC,KAAKK,YAAa,GAOpBW,YAAW,WACTJ,EAAKR,SACJS,IAGPI,OAAOC,OAAS,WAEZ,IADF,IAAMC,EAAWC,SAASC,uBAAuB,cACtCd,EAAI,EAAGA,EAAIY,EAASX,OAAQD,IAAK,CACxC,IAAMT,EAAWqB,EAASZ,GAAGe,aAAa,eACpCvB,EAASoB,EAASZ,GAAGe,aAAa,eACpCxB,GACF,IAAIF,EAAUuB,EAASZ,GAAIgB,KAAKC,MAAM1B,GAAWC,KAMrD,cAACL,EAAD,UACE,cAAC,WAAD,CAAU+B,SAAU,0CAApB,SACE,uCACQ,IACN,sBACEC,UAAU,aACV,cAAY,OACZ,cAAY,+CAULC,IAAOC,IAAV","file":"static/js/14.56636fd9.chunk.js","sourcesContent":["import { Suspense } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport usePath from \"../components/_Hooks/usePath\";\r\n\r\nconst Home = () => {\r\n  const TxtRotate = function (element, toRotate, period) {\r\n    this.toRotate = toRotate;\r\n    this.element = element;\r\n    this.loopNum = 0;\r\n    this.period = parseInt(period, 10) || 2000;\r\n    this.txt = \"\";\r\n    this.tick();\r\n    this.isDeleting = false;\r\n  };\r\n\r\n  TxtRotate.prototype.tick = function () {\r\n    const i = this.loopNum % this.toRotate.length;\r\n    const fullTxt = this.toRotate[i];\r\n\r\n    if (this.isDeleting) {\r\n      this.txt = fullTxt.substring(0, this.txt.length - 1);\r\n    } else {\r\n      this.txt = fullTxt.substring(0, this.txt.length + 1);\r\n    }\r\n\r\n    this.element.innerHTML = '<span class=\"wrap\">' + this.txt + \"</span>\";\r\n\r\n    const that = this;\r\n    let delta = 300 - Math.random() * 100;\r\n\r\n    if (this.isDeleting) {\r\n      delta /= 2;\r\n    }\r\n\r\n    if (!this.isDeleting && this.txt === fullTxt) {\r\n      delta = this.period;\r\n      this.isDeleting = true;\r\n    } else if (this.isDeleting && this.txt === \"\") {\r\n      this.isDeleting = false;\r\n      this.loopNum++;\r\n      delta = 500;\r\n    }\r\n\r\n    setTimeout(function () {\r\n      that.tick();\r\n    }, delta);\r\n  };\r\n\r\nwindow.onload = () => {\r\n  const elements = document.getElementsByClassName(\"txt-rotate\");\r\n    for (let i = 0; i < elements.length; i++) {\r\n      const toRotate = elements[i].getAttribute(\"data-rotate\");\r\n      const period = elements[i].getAttribute(\"data-period\");\r\n      if (toRotate) {\r\n        new TxtRotate(elements[i], JSON.parse(toRotate), period);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledHome>\r\n      <Suspense fallback={<div>Loading</div>}>\r\n        <h1>\r\n          Hello{\" \"}\r\n          <span\r\n            className=\"txt-rotate\"\r\n            data-period=\"2000\"\r\n            data-rotate='[ \"World\", \"JS\", \"React\", \"You!\" ]'\r\n          ></span>\r\n        </h1>\r\n      </Suspense>\r\n    </StyledHome>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\nconst StyledHome = styled.div`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  justify-content: center;\r\n  align-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  h1 {\r\n    :before {\r\n      content: \"<h1>\";\r\n    }\r\n\r\n    :after {\r\n      content: \"</h1>\";\r\n    }\r\n  }\r\n\r\n  img {\r\n    width: 100%;\r\n  }\r\n\r\n  .views {\r\n    width: auto;\r\n    margin-top: 50px;\r\n    text-align: center;\r\n  }\r\n`;\r\n"],"sourceRoot":""}